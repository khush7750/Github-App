{"version":3,"sources":["gitCompoents/userCard.js","gitCompoents/Repos.js","component/usercontex.js","pages/Home.js","pages/Sgnup.js","pages/Signin.js","pages/pagentfound.js","layout/foter.js","layout/Header.js","App.js","firebase/configfirebase.js","serviceWorker.js","index.js"],"names":["UserCard","user","Card","className","src","avatar_url","CardBody","name","location","bio","email","hireable","followers","following","Repos","repos_url","useState","repos","setRepos","fetchRepos","a","Axios","get","data","useEffect","ListGroup","map","repo","ListGroupItem","key","id","language","description","UserContext","createContext","Home","context","useContext","query","setQuery","setUser","fetchDetails","console","log","toast","type","uid","Container","Row","Col","md","InputGroup","Input","value","onChange","e","target","placeholder","InputGroupAddon","addonType","Button","onClick","color","to","SignUp","setEmail","password","setPassword","lg","Form","onSubmit","preventDefault","firebase","auth","createUserWithEmailAndPassword","then","res","catch","error","message","CardHeader","FormGroup","row","Label","for","sm","CardFooter","block","SignIn","signInWithEmailAndPassword","Pagenotfound","Footer","fluid","tag","Header","isOpen","setIsOpen","Navbar","light","expand","NavbarBrand","NavbarText","NavbarToggler","Collapse","navbar","Nav","NavItem","NavLink","Link","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","App","Provider","exact","path","component","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6a7046a4.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {Card, CardBody} from \"reactstrap\"\r\n\r\nconst UserCard = ({user}) =>{\r\n\r\n    return(\r\n        <Card className= \"text-center mt-3 mb-4\">\r\n            <img src={user.avatar_url}  className=\"img-thumbnail\"/>\r\n            <CardBody>\r\n                <div className=\"text-primary\">{user.name}</div>\r\n                <div className=\"text-primary\">{user.location}</div>\r\n                <div className=\"text-primary\">{user.bio}</div>\r\n                <div className=\"text-primary\">Email: {user.email}</div>\r\n                <div className=\"text-info\">Available for Hair: {user.hireable ? \"Yes\" : \"Noop\"}</div>\r\n                <div className=\"text-info\">Followers: {user.followers}</div>\r\n                <div className=\"text-info\">Following: {user.following}</div>\r\n            </CardBody>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default UserCard","import React, {useState, useEffect, useLayoutEffect} from \"react\"\r\nimport Axios from 'axios';\r\nimport {ListGroup, ListGroupItem} from \"reactstrap\"\r\n\r\n\r\nconst Repos = ({repos_url}) =>{\r\n    const[repos, setRepos] = useState([])\r\n\r\n    const fetchRepos = async () =>{\r\n        const {data} = await Axios.get(repos_url) \r\n        setRepos(data)\r\n    }\r\n\r\n    useEffect(()=>{\r\n        fetchRepos()\r\n    },[repos_url])\r\n\r\n    return(\r\n        <ListGroup>\r\n            {repos.map(repo => (\r\n                <ListGroupItem key={repo.id}>\r\n                    <div className=\"text-primary\">{repo.name}</div>\r\n                    <div className=\"text-secondary\">{repo.language}</div>\r\n                    <div className=\"text-info\">{repo.description}</div>\r\n                </ListGroupItem>\r\n            ))}\r\n        </ListGroup>\r\n    )\r\n}\r\n\r\nexport default Repos","import {createContext} from 'react';\r\n\r\nexport const UserContext = createContext()","import React, { useState, useContext } from \"react\";\r\nimport Axios from \"axios\";\r\n\r\nimport {\r\n  Row,\r\n  Container,\r\n  Col,\r\n  Input,\r\n  Button,\r\n  InputGroup,\r\n  InputGroupAddon\r\n} from \"reactstrap\";\r\n\r\nimport UserCard from \"../gitCompoents/userCard\";\r\nimport Repos from \"../gitCompoents/Repos\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { UserContext } from \"../component/usercontex\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst Home = () =>{\r\n\r\n    const context = useContext(UserContext)\r\n    const[query, setQuery] = useState(\"\")\r\n    const[user, setUser] = useState(null)\r\n\r\n    const fetchDetails  = async () =>{\r\n        try {\r\n            const{data} = await Axios.get(`https://api.github.com/users/${query}`)\r\n            setUser(data)\r\n            console.log({data})\r\n        } catch (error) {\r\n            toast(\"not able to locate user\",{type:\"error\"})\r\n        }\r\n    }\r\n\r\n\r\n    // put any page behnd the login\r\n\r\n    if (!context.user?.uid) {\r\n        return <Redirect to=\"/signin\" />\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n          <Row className=\" mt-3\">\r\n            <Col md=\"5\">\r\n              <InputGroup>\r\n                <Input\r\n                  type=\"text\"\r\n                  value={query}\r\n                  onChange={e => setQuery(e.target.value)}\r\n                  placeholder=\"Please provide the username\"\r\n                />\r\n                <InputGroupAddon addonType=\"append\">\r\n                  <Button onClick={fetchDetails} color=\"primary\">\r\n                      Fetch User\r\n                  </Button>\r\n                </InputGroupAddon>\r\n              </InputGroup>\r\n\r\n              {user ? <UserCard user={user}/> : null}\r\n            </Col>\r\n            \r\n            <Col md=\"7\">{user ? <Repos repos_url={user.repos_url} /> : null}</Col>\r\n          </Row>\r\n        </Container>\r\n      );\r\n}\r\n\r\nexport default Home","import React, {useState, useContext} from \"react\";\r\nimport {\r\n    Container,\r\n    Form,\r\n    Button,\r\n    FormGroup,\r\n    Label,\r\n    Col,\r\n    Input,\r\n    Row,\r\n    Card,\r\n    CardBody,\r\n    CardFooter,\r\n    CardHeader\r\n} from \"reactstrap\"\r\n\r\nimport firebase from \"firebase/app\"\r\nimport {UserContext} from \"../component/usercontex\"\r\nimport {Redirect} from \"react-router-dom\"\r\nimport {toast, Toast} from \"react-toastify\"\r\n\r\nconst SignUp = () =>{\r\n    const context = useContext(UserContext)\r\n\r\n    const [email , setEmail] = useState()\r\n    const [password , setPassword] = useState()\r\n\r\n    // hande signup\r\n    const handleSignUp = () =>{\r\n        firebase\r\n        .auth()\r\n        .createUserWithEmailAndPassword(email, password)\r\n        .then(res =>{\r\n            console.log(res)\r\n            context.setUser({email: res.user.email , uid: res.user.uid})\r\n        })\r\n        .catch(error =>{\r\n            console.log(error)\r\n            toast(error.message, {\r\n                type:\"error\"\r\n            })\r\n        })\r\n    }\r\n\r\n\r\n    // handle submit\r\n    const handleFormSubmit = e =>{\r\n        e.preventDefault()\r\n        handleSignUp()\r\n    }\r\n    \r\n    if (context.user?.uid){\r\n        return <Redirect to=\"/\"/>\r\n    }\r\n    return (\r\n\t\t<Container className='text-center'>\r\n\t\t\t<Row>\r\n\t\t\t\t<Col lg={6} className='offset-lg-3 mt-5'>\r\n\t\t\t\t\t<Card>\r\n\t\t\t\t\t\t<Form onSubmit={handleFormSubmit}>\r\n\t\t\t\t\t\t\t<CardHeader className=''>SignUp here</CardHeader>\r\n\t\t\t\t\t\t\t<CardBody>\r\n\t\t\t\t\t\t\t\t<FormGroup row>\r\n\t\t\t\t\t\t\t\t\t<Label for='email' sm={3}>\r\n\t\t\t\t\t\t\t\t\t\tEmail\r\n\t\t\t\t\t\t\t\t\t</Label>\r\n\t\t\t\t\t\t\t\t\t<Col sm={9}>\r\n\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\ttype='email'\r\n\t\t\t\t\t\t\t\t\t\t\tname='email'\r\n\t\t\t\t\t\t\t\t\t\t\tid='email'\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder='provide your email'\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={email}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={e => setEmail(e.target.value)}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t\t\t\t<FormGroup row>\r\n\t\t\t\t\t\t\t\t\t<Label for='password' sm={3}>\r\n\t\t\t\t\t\t\t\t\t\tPassword\r\n\t\t\t\t\t\t\t\t\t</Label>\r\n\t\t\t\t\t\t\t\t\t<Col sm={9}>\r\n\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\ttype='password'\r\n\t\t\t\t\t\t\t\t\t\t\tname='password'\r\n\t\t\t\t\t\t\t\t\t\t\tid='password'\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=' create your password'\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={password}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={e => setPassword(e.target.value)}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t\t\t</CardBody>\r\n\t\t\t\t\t\t\t<CardFooter>\r\n\t\t\t\t\t\t\t\t<Button type='submit' block color='primary'>\r\n\t\t\t\t\t\t\t\t\tSign Up\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t</CardFooter>\r\n\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t</Card>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t</Container>\r\n\t);\r\n}\r\n\r\nexport default SignUp","import React, {useState, useContext} from \"react\";\r\nimport {\r\n    Container,\r\n    Form,\r\n    Button,\r\n    FormGroup,\r\n    Label,\r\n    Col,\r\n    Input,\r\n    Row,\r\n    Card,\r\n    CardBody,\r\n    CardFooter,\r\n    CardHeader\r\n} from \"reactstrap\"\r\n\r\nimport firebase from \"firebase/app\"\r\nimport {UserContext} from \"../component/usercontex\"\r\nimport {Redirect} from \"react-router-dom\"\r\nimport {toast, Toast} from \"react-toastify\"\r\n\r\nconst SignIn = () =>{\r\n    const context = useContext(UserContext)\r\n\r\n    const [email , setEmail] = useState()\r\n    const [password , setPassword] = useState()\r\n\r\n    // hande signup\r\n    const handleSignUp = () =>{\r\n        firebase\r\n        .auth()\r\n        .signInWithEmailAndPassword(email,password)\r\n        .then(res =>{\r\n            console.log(res)\r\n            context.setUser({email: res.user.email , uid: res.user.uid})\r\n        })\r\n        .catch(error =>{\r\n            console.log(error)\r\n            toast(error.message, {\r\n                type:\"error\"\r\n            })\r\n        })\r\n    }\r\n\r\n\r\n    // handle submit\r\n    const handleFormSubmit = e =>{\r\n        e.preventDefault()\r\n        handleSignUp()\r\n    }\r\n    \r\n    if (context.user?.uid){\r\n        return <Redirect to=\"/\"/>\r\n    }\r\n    return (\r\n\t\t<Container className='text-center'>\r\n\t\t\t<Row>\r\n\t\t\t\t<Col lg={6} className='offset-lg-3 mt-5'>\r\n\t\t\t\t\t<Card>\r\n\t\t\t\t\t\t<Form onSubmit={handleFormSubmit}>\r\n\t\t\t\t\t\t\t<CardHeader className=''>SignIn here</CardHeader>\r\n\t\t\t\t\t\t\t<CardBody>\r\n\t\t\t\t\t\t\t\t<FormGroup row>\r\n\t\t\t\t\t\t\t\t\t<Label for='email' sm={3}>\r\n\t\t\t\t\t\t\t\t\t\tEmail/U.name\r\n\t\t\t\t\t\t\t\t\t</Label>\r\n\t\t\t\t\t\t\t\t\t<Col sm={9}>\r\n\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\ttype='email'\r\n\t\t\t\t\t\t\t\t\t\t\tname='email'\r\n\t\t\t\t\t\t\t\t\t\t\tid='email'\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder='provide your email'\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={email}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={e => setEmail(e.target.value)}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t\t\t\t<FormGroup row>\r\n\t\t\t\t\t\t\t\t\t<Label for='password' sm={3}>\r\n\t\t\t\t\t\t\t\t\t\tPassword\r\n\t\t\t\t\t\t\t\t\t</Label>\r\n\t\t\t\t\t\t\t\t\t<Col sm={9}>\r\n\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\ttype='password'\r\n\t\t\t\t\t\t\t\t\t\t\tname='password'\r\n\t\t\t\t\t\t\t\t\t\t\tid='password'\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder='your password here'\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={password}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={e => setPassword(e.target.value)}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t\t\t</CardBody>\r\n\t\t\t\t\t\t\t<CardFooter>\r\n\t\t\t\t\t\t\t\t<Button type='submit' block color='primary'>\r\n\t\t\t\t\t\t\t\t\tSign In\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t</CardFooter>\r\n\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t</Card>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t</Container>\r\n\t);\r\n}\r\n\r\nexport default SignIn","import React from \"react\";\r\n\r\nconst Pagenotfound = () =>{\r\n\r\n    return(\r\n        <div>\r\n            <h1>Pagenotfound</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Pagenotfound","import React from \"react\";\r\nimport{Container} from \"reactstrap\"\r\n\r\nconst Footer = ()=>{\r\n    return(\r\n        <Container\r\n        fluid\r\n        tag = \"footer\"\r\n        className= \"text-center bg-info text-white text-uppercase fixed-bottom p-3\">\r\n            github search footer\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Footer","import React, {useState , useContext} from  \"react\"\r\nimport {\r\n    Collapse,\r\n    Navbar,\r\n    Nav,\r\n    NavItem,\r\n    NavLink,\r\n    NavbarBrand,\r\n    NavbarToggler,\r\n    NavbarText,\r\n} from \"reactstrap\"\r\nimport {Link} from \"react-router-dom\"\r\nimport {UserContext} from \"../component/usercontex\"\r\n\r\n\r\nconst Header = () =>{\r\n\r\n    const context = useContext(UserContext)\r\n\r\n    const [isOpen, setIsOpen] = useState(false)\r\n\r\n    const tooggle = () => setIsOpen(! isOpen)\r\n\r\n\r\n    return(\r\n        <Navbar color=\"info\" light expand =\"md\">\r\n            <NavbarBrand>\r\n                <Link to=\"/\" className = \"text-white\">\r\n                     Git Fire App\r\n                </Link>\r\n             </NavbarBrand>\r\n\r\n             <NavbarText className = \"text-white\">\r\n                { context.user?.email ? context.user.email : \"\"}\r\n             </NavbarText>\r\n\r\n             <NavbarToggler onClick={tooggle}/>\r\n\r\n             <Collapse isOpen={isOpen} navbar>\r\n                <Nav className = \"ml-auto\" navbar>\r\n                    {\r\n                        context.user ? (\r\n                        <NavItem>\r\n                           <NavLink onClick={() => {context.setUser(null)}} to = \"/\" className = \"text-white\">\r\n                              LogOut\r\n                           </NavLink>\r\n                        </NavItem>\r\n                        ) : (\r\n                        <>\r\n                            <NavItem>\r\n                                <NavLink tag={Link} to = \"/signin\" className = \"text-white\">\r\n                                   SignIn\r\n                                </NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink tag={Link} to = \"/signup\" className = \"text-white\">\r\n                                   SignUp\r\n                                </NavLink>\r\n                            </NavItem>\r\n                        </>\r\n                        )\r\n                    };\r\n                    \r\n                </Nav>\r\n             </Collapse>\r\n\r\n        </Navbar>\r\n    );\r\n};\r\n\r\nexport default Header\r\n\r\n","import React, {useState} from \"react\" \r\nimport \"bootstrap/dist/css/bootstrap.min.css\"\r\nimport \"./App.css\";\r\n\r\n// react router\r\nimport{BrowserRouter as Router, Switch, Route} from \"react-router-dom\"\r\n\r\n// toast\r\nimport {ToastContainer} from \"react-toastify\"\r\nimport \"react-toastify/dist/ReactToastify.min.css\"\r\n\r\n// firebase\r\nimport firebase from \"firebase/app\"\r\nimport \"firebase/auth\"\r\n\r\n// pages\r\nimport Home from \"./pages/Home\"\r\nimport SignUp from \"./pages/Sgnup\"\r\nimport SignIn from \"./pages/Signin\"\r\nimport Pagenotfound from \"./pages/pagentfound\"\r\n\r\nimport { UserContext } from \"./component/usercontex\"\r\nimport Footer from \"./layout/foter\"\r\nimport Header from \"./layout/Header\"\r\n\r\n// init firebase\r\nimport firebaseConfig from \"./firebase/configfirebase\"\r\nfirebase.initializeApp(firebaseConfig)\r\n\r\nconst App = () =>{\r\n    const [user , setUser] = useState(null)\r\n\r\n    return(\r\n        <Router>\r\n            <ToastContainer/>\r\n                <UserContext.Provider value = {{user, setUser}}>\r\n                    <Header/>\r\n                    \r\n                    <Switch>\r\n                        <Route exact path=\"/\" component={Home} />\r\n                        <Route exact path=\"/signup\" component={SignUp} />\r\n                        <Route exact path=\"/signin\" component={SignIn} />\r\n                        <Route exact path=\"*\" component={Pagenotfound} />\r\n                    </Switch>\r\n                    \r\n                    <Footer/>\r\n                </UserContext.Provider>\r\n        </Router>\r\n    );\r\n};\r\nexport default App","export default {\r\n    apiKey: \"AIzaSyBA8C7-fAWUeGfFc0YXEWT6AV9qsrFKggU\",\r\n    authDomain: \"mygitapp-46ecc.firebaseapp.com\",\r\n    databaseURL: \"https://mygitapp-46ecc.firebaseio.com\",\r\n    projectId: \"mygitapp-46ecc\",\r\n    storageBucket: \"mygitapp-46ecc.appspot.com\",\r\n    messagingSenderId: \"479423048924\",\r\n    appId: \"1:479423048924:web:b08273f9dafd483d289819\",\r\n    measurementId: \"G-0SSV6MWM08\"\r\n  };","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}